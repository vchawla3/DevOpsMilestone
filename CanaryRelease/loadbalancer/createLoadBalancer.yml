---
- hosts: localhost
  connection: local
  become: yes

  tasks:
    - name: get root ssh DO ID
      become: yes
      shell: cat /root/.ssh/do_id
      register: ssh_id

    - name: get jenkins ssh DO ID
      become: yes
      shell: cat /var/lib/jenkins/.ssh/do_id
      register: ssh_jenkins_id

    - name: get DOTOKEN
      become: yes
      shell: cat /home/DOTOKEN
      register: DOTOKEN

    - name: get STABLEIP
      become: yes
      shell: cat /home/STABLEIP
      register: STABLEIP

    - name: get CANARYIP
      become: yes
      shell: cat /home/CANARYIP
      register: CANARYIP

    - name: check if dropletID exists
      become: yes
      stat: 
        path: /home/loadbalancer/dropletID
      register: droplet_exists

    - name: get dropletID if exists
      become: yes
      shell: cat /home/loadbalancer/dropletID
      register: dropletID
      when: droplet_exists.stat.exists == True

    - name: delete current loadbalancer droplet
      digital_ocean:
        state: absent
        command: droplet
        id: "{{ dropletID.stdout }}"
        wait_timeout: 500
        api_token: "{{ DOTOKEN.stdout }}"
      when: droplet_exists.stat.exists == True

    - name: create new loadbalancer droplet
      digital_ocean:
        state: present
        command: droplet
        name: loadbalancer
        size_id: 512mb
        region_id: nyc1
        image_id: ubuntu-14-04-x64
        wait_timeout: 500
        ssh_key_ids: "{{ ssh_id.stdout }},{{ ssh_jenkins_id.stdout }}"
        api_token: "{{ DOTOKEN.stdout }}"
      register: new_droplet

    - name: delete dropletID file
      file:
        path: /home/loadbalancer/dropletID
        state: absent

    - name: make dropletID file present
      file:
        path: /home/loadbalancer/dropletID
        state: touch
        mode: 0777

    - name: set dropletID file
      lineinfile:
        path: /home/loadbalancer/dropletID
        line: "{{ new_droplet.droplet.id }}"

    - name: make inventory file absent
      file:
        path: /home/loadbalancer/loadBalancerInventory
        state: absent

    - name: make inventory file present
      file:
        path: /home/loadbalancer/loadBalancerInventory
        state: touch
        mode: 0777

    - name: set inventory file
      lineinfile:
        path: /home/loadbalancer/loadBalancerInventory
        line: "[nodes]\n{{ new_droplet.droplet.ip_address }} ansible_ssh_user=root"

    - name: Configure stable IP
      lineinfile:
        dest: /home/loadbalancer/infrastructure.js
        regexp: '^var STABLE ='
        line: "var STABLE = 'http://{{ STABLEIP.stdout }}';"

    - name: Configure canary IP
      lineinfile:
        dest: /home/loadbalancer/infrastructure.js
        regexp: '^var CANARY ='
        line: "var CANARY = 'http://{{ CANARYIP.stdout }}';"

    - name: Configure canary backup IP
      lineinfile:
        dest: /home/loadbalancer/infrastructure.js
        regexp: '^var BACKUPCANARY ='
        line: "var BACKUPCANARY = 'http://{{ CANARYIP.stdout }}';"

    - debug:
        msg: "loadbalancer IP: {{ new_droplet.droplet.ip_address }}"

    - name: Wait for SSH to come up
      local_action: wait_for host={{ new_droplet.droplet.ip_address }} port=22 delay=60 timeout=320 state=started